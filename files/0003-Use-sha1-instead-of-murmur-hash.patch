From e7fba87156091d2b8cb8c709bc08e27a73d46701 Mon Sep 17 00:00:00 2001
From: Joey Riches <josephriches@gmail.com>
Date: Wed, 10 Nov 2021 12:03:42 +0000
Subject: [PATCH 3/3] Use sha1 instead of murmur hash

Partially reverts b570f8850e042c9538aaf261ab5fe55d840253b5
---
 src/library/common.h | 1 +
 src/main.c           | 6 +++---
 2 files changed, 4 insertions(+), 3 deletions(-)

diff --git a/src/library/common.h b/src/library/common.h
index c35d140..2c30f79 100644
--- a/src/library/common.h
+++ b/src/library/common.h
@@ -125,6 +125,7 @@ typedef struct source_package_t {
         bool xml;         /**<Whether this is libxml's memory */
         void *extra;      /**<Extra storage for each implementation */
         PackageType type; /**<Package type */
+        char *sha1;       /**<Sha1 header */
         char *murmur_hash_string; /**<Murmur hash from Sha1 header, string form */
         uint64_t murmur_hash_int; /**<Murmur hash from Sha1 header, integer form */
         char *product_name; /**<Optional: corresponding product name, if one is found */
diff --git a/src/main.c b/src/main.c
index fffe361..5c06c6b 100644
--- a/src/main.c
+++ b/src/main.c
@@ -123,7 +123,7 @@ static void cve_add_package_internal(struct source_package_t *pkg)
         }
 
         {
-                struct source_package_t *old = g_hash_table_lookup(self->db, (pkg->murmur_hash_string != NULL) ? pkg->murmur_hash_string : pkg->name);
+                struct source_package_t *old = g_hash_table_lookup(self->db, (pkg->sha1 != NULL) ? pkg->sha1 : pkg->name);
 
                 if (old && pkg_plugin->merge_extra) {
                         if (!pkg_plugin->merge_extra(pkg, old)) {
@@ -247,8 +247,8 @@ no_discarded_issues:
          * First remove values, after that insert new ones in separate step,
          * otherwise pointer to key from previous value is kept, and used after free
          */
-        g_hash_table_remove(self->db, (pkg->murmur_hash_string != NULL) ? pkg->murmur_hash_string : pkg->name);
-        g_hash_table_insert(self->db, (pkg->murmur_hash_string != NULL) ? pkg->murmur_hash_string : pkg->name, pkg);
+        g_hash_table_remove(self->db, (pkg->sha1 != NULL) ? pkg->sha1 : pkg->name);
+        g_hash_table_insert(self->db, (pkg->sha1 != NULL) ? pkg->sha1 : pkg->name, pkg);
 
         gchar *product_name_dup = g_strdup(pkg->product_name);
         g_hash_table_replace(self->product_db, product_name_dup, product_name_dup);
-- 
2.33.1

